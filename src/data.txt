孤傲苍狼
只为成功找方法，不为失败找借口！

javaweb学习总结(三十四)——使用JDBC处理MySQL大数据

一、基本概念
　　大数据也称之为LOB(Large Objects)，LOB又分为：clob和blob，clob用于存储大文本，blob用于存储二进制数据，例如图像、声音、二进制文等。

　　在实际开发中，有时是需要用程序把大文本或二进制数据直接保存到数据库中进行储存的。

　　对MySQL而言只有blob，而没有clob，mysql存储大文本采用的是Text，Text和blob分别又分为：
　　TINYTEXT、TEXT、MEDIUMTEXT和LONGTEXT
　　TINYBLOB、BLOB、MEDIUMBLOB和LONGBLOB

二、搭建测试环境
2.1、搭建的测试项目架构

　　如下：

　　

2.2、编写db.properties配置文件

1 driver=com.mysql.jdbc.Driver
2 url=jdbc:mysql://localhost:3306/jdbcStudy
3 username=root
4 password=XDP
2.3、编写JdbcUtils工具类

复制代码
 1 package me.gacl.utils;
 2 
 3 import java.io.InputStream;
 4 import java.sql.Connection;
 5 import java.sql.DriverManager;
 6 import java.sql.ResultSet;
 7 import java.sql.SQLException;
 8 import java.sql.Statement;
 9 import java.util.Properties;
10 
11 public class JdbcUtils {
12 
13     private static String driver = null;
14     private static String url = null;
15     private static String username = null;
16     private static String password = null;
17     
18     static{
19         try{
20             //读取db.properties文件中的数据库连接信息
21             InputStream in = JdbcUtils.class.getClassLoader().getResourceAsStream("db.properties");
22             Properties prop = new Properties();
23             prop.load(in);
24             
25             //获取数据库连接驱动
26             driver = prop.getProperty("driver");
27             //获取数据库连接URL地址
28             url = prop.getProperty("url");
29             //获取数据库连接用户名
30             username = prop.getProperty("username");
31             //获取数据库连接密码
32             password = prop.getProperty("password");
33             
34             //加载数据库驱动
35             Class.forName(driver);
36             
37         }catch (Exception e) {
38             throw new ExceptionInInitializerError(e);
39         }
40     }
41     
42     /**
43     * @Method: getConnection
44     * @Description: 获取数据库连接对象
45     * @Anthor:孤傲苍狼
46     *
47     * @return Connection数据库连接对象
48     * @throws SQLException
49     */ 
50     public static Connection getConnection() throws SQLException{
51         return DriverManager.getConnection(url, username,password);
52     }
53     
54     /**
55     * @Method: release
56     * @Description: 释放资源，
57     *     要释放的资源包括Connection数据库连接对象，负责执行SQL命令的Statement对象，存储查询结果的ResultSet对象
58     * @Anthor:孤傲苍狼
59     *
60     * @param conn
61     * @param st
62     * @param rs
63     */ 
64     public static void release(Connection conn,Statement st,ResultSet rs){
65         if(rs!=null){
66             try{
67                 //关闭存储查询结果的ResultSet对象
68                 rs.close();
69             }catch (Exception e) {
70                 e.printStackTrace();
71             }
72             rs = null;
73         }
74         if(st!=null){
75             try{
76                 //关闭负责执行SQL命令的Statement对象
77                 st.close();
78             }catch (Exception e) {
79                 e.printStackTrace();
80             }
81         }
82         
83         if(conn!=null){
84             try{
85                 //关闭Connection数据库连接对象
86                 conn.close();
87             }catch (Exception e) {
88                 e.printStackTrace();
89             }
90         }
91     }
92 }
复制代码
三、使用JDBC处理MySQL的大文本
　　对于MySQL中的Text类型，可调用如下方法设置

1 PreparedStatement.setCharacterStream(index, reader, length);//注意length长度须设置，并且设置为int型
　　对MySQL中的Text类型，可调用如下方法获取

1 reader = resultSet. getCharacterStream(String columnLabel);2 string s = resultSet.getString(String columnLabel);
3.1、 测试范例

　　1、编写SQL测试脚本

复制代码
1 create database jdbcstudy;
2 use jdbcstudy;
3 create table testclob
4 (
5          id int primary key auto_increment,
6          resume text
7 );
复制代码
　　2、编写测试代码如下：

复制代码
  1 package me.gacl.demo;
  2 
  3 import java.io.File;
  4 import java.io.FileReader;
  5 import java.io.FileWriter;
  6 import java.io.Reader;
  7 import java.sql.Connection;
  8 import java.sql.PreparedStatement;
  9 import java.sql.ResultSet;
 10 import me.gacl.utils.JdbcUtils;
 11 import org.junit.Test;
 12 
 13 /**
 14 * @ClassName: JdbcOperaClob
 15 * @Description: 使用JDBC操作MySQL的大文本
 16 * @author: 孤傲苍狼
 17 * @date: 2014-9-19 下午10:10:04
 18 *
 19 */ 
 20 public class JdbcOperaClob {
 21 
 22     /**
 23     * @Method: add
 24     * @Description:向数据库中插入大文本数据
 25     * @Anthor:孤傲苍狼
 26     *
 27     */ 
 28     @Test
 29     public void add(){
 30         Connection conn = null;
 31         PreparedStatement st = null;
 32         ResultSet rs = null;
 33         Reader reader = null;
 34         try{
 35             conn = JdbcUtils.getConnection();
 36             String sql = "insert into testclob(resume) values(?)";
 37             st = conn.prepareStatement(sql);
 38             //这种方式获取的路径，其中的空格会被使用“%20”代替
 39             String path = JdbcOperaClob.class.getClassLoader().getResource("data.txt").getPath();
 40             //将“%20”替换回空格
 41             path = path.replaceAll("%20", " ");
 42             File file = new File(path);
 43             reader = new FileReader(file);
 44             st.setCharacterStream(1, reader,(int) file.length());
 45             int num = st.executeUpdate();
 46             if(num>0){
 47                 System.out.println("插入成功！！");
 48             }
 49             //关闭流
 50             reader.close();
 51         }catch (Exception e) {
 52             e.printStackTrace();
 53         }finally{
 54             JdbcUtils.release(conn, st, rs);
 55         }
 56     }
 57     
 58     /**
 59     * @Method: read
 60     * @Description: 读取数据库中的大文本数据
 61     * @Anthor:孤傲苍狼
 62     *
 63     */ 
 64     @Test
 65     public void read(){
 66         Connection conn = null;
 67         PreparedStatement st = null;
 68         ResultSet rs = null;
 69         try{
 70             conn = JdbcUtils.getConnection();
 71             String sql = "select resume from testclob where id=2";
 72             st = conn.prepareStatement(sql);
 73             rs = st.executeQuery();
 74             
 75             String contentStr ="";
 76             String content = "";
 77             if(rs.next()){
 78                 //使用resultSet.getString("字段名")获取大文本数据的内容
 79                 content = rs.getString("resume");
 80                 //使用resultSet.getCharacterStream("字段名")获取大文本数据的内容
 81                 Reader reader = rs.getCharacterStream("resume");
 82                 char buffer[] = new char[1024];
 83                 int len = 0;
 84                 FileWriter out = new FileWriter("D:\\1.txt");
 85                 while((len=reader.read(buffer))>0){
 86                     contentStr += new String(buffer);
 87                     out.write(buffer, 0, len);
 88                 }
 89                 out.close();
 90                 reader.close();
 91             }
 92             System.out.println(content);
 93             System.out.println("-----------------------------------------------");
 94             System.out.println(contentStr);
 95         }catch (Exception e) {
 96             e.printStackTrace();
 97         }finally{
 98             JdbcUtils.release(conn, st, rs);
 99         }
100     }
101 }
复制代码
四、使用JDBC处理MySQL的二进制数据
　　对于MySQL中的BLOB类型，可调用如下方法设置：

1 PreparedStatement. setBinaryStream(i, inputStream, length);
　　对MySQL中的BLOB类型，可调用如下方法获取：

1 InputStream in  = resultSet.getBinaryStream(String columnLabel);
2 InputStream in  = resultSet.getBlob(String columnLabel).getBinaryStream(); 
 4.1、 测试范例

　　1、编写SQL测试脚本

1 create table testblob
2 (
3      id int primary key auto_increment,
4      image longblob
5 );
　　2、编写测试代码如下：

复制代码
 1 package me.gacl.demo;
 2 
 3 import java.io.File;
 4 import java.io.FileInputStream;
 5 import java.io.FileOutputStream;
 6 import java.io.InputStream;
 7 import java.sql.Connection;
 8 import java.sql.PreparedStatement;
 9 import java.sql.ResultSet;
10 import me.gacl.utils.JdbcUtils;
11 import org.junit.Test;
12 
13 /**
14 * @ClassName: JdbcOperaClob
15 * @Description: 使用JDBC操作MySQL的二进制数据(例如图像、声音、二进制文)
16 * @author: 孤傲苍狼
17 * @date: 2014-9-19 下午10:10:04
18 *
19 */ 
20 public class JdbcOperaBlob {
21 
22     /**
23     * @Method: add
24     * @Description:向数据库中插入二进制数据
25     * @Anthor:孤傲苍狼
26     *
27     */ 
28     @Test
29     public void add(){
30         Connection conn = null;
31         PreparedStatement st = null;
32         ResultSet rs = null;
33         try{
34             conn = JdbcUtils.getConnection();
35             String sql = "insert into testblob(image) values(?)";
36             st = conn.prepareStatement(sql);
37             //这种方式获取的路径，其中的空格会被使用“%20”代替
38             String path = JdbcOperaBlob.class.getClassLoader().getResource("01.jpg").getPath();
39             //将“%20”替换会空格
40             path = path.replaceAll("%20", " ");
41             File file = new File(path);
42             FileInputStream fis = new FileInputStream(file);//生成的流
43             st.setBinaryStream(1, fis,(int) file.length());
44             int num = st.executeUpdate();
45             if(num>0){
46                 System.out.println("插入成功！！");
47             }
48             fis.close();
49         }catch (Exception e) {
50             e.printStackTrace();
51         }finally{
52             JdbcUtils.release(conn, st, rs);
53         }
54     }
55     
56     /**
57     * @Method: read
58     * @Description: 读取数据库中的二进制数据
59     * @Anthor:孤傲苍狼
60     *
61     */ 
62     @Test
63     public void read() {
64         Connection conn = null;
65         PreparedStatement st = null;
66         ResultSet rs = null;
67         try {
68             conn = JdbcUtils.getConnection();
69             String sql = "select image from testblob where id=?";
70             st = conn.prepareStatement(sql);
71             st.setInt(1, 1);
72             rs = st.executeQuery();
73             if (rs.next()) {
74                 //InputStream in = rs.getBlob("image").getBinaryStream();//这种方法也可以
75                 InputStream in = rs.getBinaryStream("image");
76                 int len = 0;
77                 byte buffer[] = new byte[1024];
78                 
79                 FileOutputStream out = new FileOutputStream("D:\\1.jpg");
80                 while ((len = in.read(buffer)) > 0) {
81                     out.write(buffer, 0, len);
82                 }
83                 in.close();
84                 out.close();
85             }
86         } catch (Exception e) {
87             e.printStackTrace();
88         } finally {
89             JdbcUtils.release(conn, st, rs);
90         }
91     }
92 }
复制代码
　　关于使用JDBC处理MySQL大数据的内容就总结这么多！

分类: JavaWeb学习总结
标签: JavaWeb学习总结
好文要顶 关注我 收藏该文    
孤傲苍狼
关注 - 88
粉丝 - 9120
+加关注
7 0
« 上一篇：javaweb学习总结(三十三)——使用JDBC对数据库进行CRUD
» 下一篇：JavaWeb学习总结(三十五)——使用JDBC处理Oracle大数据
posted on 2014-10-18 10:51 孤傲苍狼 阅读(18404) 评论(8) 编辑 收藏

评论

#1楼 2015-06-08 19:42 lh5402815  
为什么不直接 getRourceAsStream()???

这样不是更好吗

支持(0)反对(0)
  
#2楼 2015-09-15 20:34 冯大圆  
这个应用场景是什么？

支持(1)反对(0)
  
#3楼 2016-02-24 14:22 譬如北辰  
1
2
3
4
5
6
7
8
9
10
11
driver=com.mysql.jdbc.Driver
 
url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8
 
username=root
 
password=
 
initialSize=4
 
maxActive =10
支持(0)反对(0)
  
#4楼 2016-08-19 17:47 晓妖快跑  
很好，很强大

支持(0)反对(0)
  
#5楼 2016-10-27 16:01 玄天强  
st.setBinary()中的长度是不是有限制？总是报 java.lang.ArrayIndexOutOfBoundsException:0

支持(0)反对(0)
  
#6楼 2016-11-07 16:59 irunner  
Servlet.service() for servlet [com.zrck.db.DatabaseAccess] in context with path [/DBTest] threw exception [Servlet execution threw an exception] with root cause
java.lang.NoClassDefFoundError: Could not initialize class com.zrck.utils.JdbcUtils

一直这个错误，无解啊。。。。。

支持(0)反对(0)
  
#7楼 2016-11-09 11:35 Mr.Jack  
@ irunner
哈哈哈哈哈

支持(0)反对(0)
  
#8楼 2017-01-06 15:53 山海经20160602  
@ irunner
哈哈哈哈哈哈哈哈

支持(0)反对(0)
  
刷新评论刷新页面返回顶部
注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。
【推荐】50万行VC++源码: 大型组态工控、电力仿真CAD与GIS源码库
【推荐】Google+GitHub联手打造前端工程师课程
【云上】在金山大米云，让云计算更简单
【推荐】阿里云香港云服务器65折，免备案

 
最新IT新闻:
· 张旭豪：创业不是为了打仗，要打就打死
· 软件工程师必备时间估算指南
· 吴军：为卖药去发明一种病是伪创新，创新从来不是从0到1
· 小米和万科建的房比北京房价便宜一半，但你知道他们要干嘛吗？
· 索尼传感器业务负责人：“我们的旗舰传感器，不外卖”
» 更多新闻...

最新知识库文章:
· 为什么我要写自己的框架？
· 垃圾回收原来是这么回事
· 「代码家」的学习过程和学习经验分享
· 写给未来的程序媛
· 高质量的工程代码为什么难写
» 更多知识库文章...
导航
博客园 首页 联系 订阅 管理
<	2017年3月	>
日	一	二	三	四	五	六
26	27	28	1	2	3	4
5	6	7	8	9	10	11
12	13	14	15	16	17	18
19	20	21	22	23	24	25
26	27	28	29	30	31	1
2	3	4	5	6	7	8
公告
昵称：孤傲苍狼
园龄：5年11个月
粉丝：9120
关注：88
+加关注
统计
随笔 - 275 文章 - 0 评论 - 2365
搜索
 
 
常用链接
我的随笔
我的评论
我的参与
最新评论
我的标签
我的标签
JavaWeb学习总结(62)
java基础总结(28)
Javascript学习总结(27)
Snmp学习总结(15)
MyEclipse使用总结(13)
Android开发学习总结(13)
Maven学习总结(12)
WebLogic使用总结(9)
MyBatis学习总结(8)
MySQL学习总结(8)
更多
随笔分类
AJAX(2)
Android开发(12)
ASP.NET(2)
C#(8)
CSS学习总结
C语言学习总结
FusionCharts
H2数据库学习使用总结(3)
Hessian(2)
Hibernate
Highcharts
HTML(1)
html5学习使用总结
Html学习总结
Java(13)
JavaScript(27)
JavaWeb学习总结(55)
Java基础加强总结(3)
java基础面试题(1)
java基础总结(28)
Java监控
Java事务处理
java字节码的处理技术
JFinal学习研究
JNDI(3)
Jquery EasyUI学习使用总结(7)
jwebap
kafka
LDAP
Linux学习总结(1)
Maven(10)
Mina
Mybatis(8)
MyEclipse(11)
MySQL(2)
Nginx(3)
Oracle学习使用总结
PowerDesigner使用总结(5)
redis
RESTful架构(1)
Servlet3.0(4)
Snmp学习总结(8)
Spring(3)
SpringMVC学习总结
SQLServer(4)
Struts2(4)
SVN
VB.NET(1)
WebLogic使用总结(8)
WebService学习总结(4)
WebSocket(1)
WinForm学习总结
XML学习总结(2)
插件化开发
创业知识(5)
大数据/hadoop(1)
代码注释(1)
单点登录(Yale_CAS_SSO)
电脑基本技能
读书笔记
负载均衡(1)
互联网基础(3)
缓存框架
架构设计
框架整合(1)
敏捷开发(1)
权限设计
生活感悟(3)
数据库Sharding(1)
数据库理论基础(3)
微信开发(3)
我的开发框架
项目管理(1)
英语学习
原创小工具(1)
云计算(2)
哲学人生
职场感悟(3)
随笔档案
2016年4月 (5)
2016年3月 (5)
2016年2月 (3)
2016年1月 (2)
2015年7月 (11)
2015年3月 (12)
2015年2月 (6)
2015年1月 (40)
2014年12月 (17)
2014年11月 (12)
2014年10月 (31)
2014年8月 (10)
2014年7月 (25)
2014年6月 (6)
2014年5月 (10)
2014年4月 (22)
2014年3月 (28)
2014年2月 (11)
2014年1月 (2)
2013年12月 (16)
2012年11月 (1)
最新评论
1. Re:java基础学习总结——面向对象1
无意中看到博主的博客，很佩服，写的特别棒
--lucky_xiao
2. Re:JavaScript学习总结(二)——逻辑Not运算符详解
膜拜
--房小↓
3. Re:javaweb学习总结(三十二)——JDBC学习入门
@竹挽清风握手.......
--study的猫
4. Re:javaweb学习总结(二十一)——JavaWeb的两种开发模式
赞
--study的猫
5. Re:javaweb学习总结(二十)——JavaBean总结
赞
--study的猫
6. Re:javaweb学习总结(十八)——JSP属性范围
感谢楼主。net转java用到了
--study的猫
7. Re:Hessian学习总结(一)——Hessian入门
nice！
--北岛知寒
8. Re:Maven学习总结(一)——Maven入门
谢谢大神分享
--半仙人
9. Re:MyBatis学习总结(八)——Mybatis3.x与Spring4.x整合
java框架生成，www点javacoder点top,希望各位coder受益
--helloworld999
10. Re:javaweb学习总结(三十二)——JDBC学习入门
大赞楼主。我是.net转Java的，看这系列教程上手很快。赞
--竹挽清风
阅读排行榜
1. MyBatis学习总结(一)——MyBatis快速入门(331103)
2. javaweb学习总结(五)——Servlet开发(一)(226935)
3. MyEclipse使用总结——MyEclipse10安装SVN插件(192596)
4. JavaWeb学习总结(一)——JavaWeb开发入门(184226)
5. JavaWeb学习总结(五十)——文件上传和下载(180149)
6. Android开发学习总结(一)——搭建最新版本的Android开发环境(128091)
7. Spring常用注解(124885)
8. MyBatis学习总结(五)——实现关联表查询(116737)
9. Java基础学习总结——Java对象的序列化和反序列化(111555)
10. MyBatis学习总结(八)——Mybatis3.x与Spring4.x整合(94563)
评论排行榜
1. JavaWeb学习总结(五十)——文件上传和下载(138)
2. javaweb学习总结(二十二)——基于Servlet+JSP+JavaBean开发模式的用户登录注册(79)
3. MyBatis学习总结(一)——MyBatis快速入门(79)
4. javaweb学习总结(五)——Servlet开发(一)(63)
5. JavaWeb学习总结(一)——JavaWeb开发入门(61)
6. MyBatis学习总结(八)——Mybatis3.x与Spring4.x整合(59)
7. MyBatis学习总结(二)——使用MyBatis对表执行CRUD操作(57)
8. 谈谈对Spring IOC的理解(52)
9. javaweb学习总结(四)——Http协议(52)
10. 创业公司一年工作总结(47)
推荐排行榜
1. javaweb学习总结(五)——Servlet开发(一)(118)
2. JavaWeb学习总结(一)——JavaWeb开发入门(104)
3. MyBatis学习总结(一)——MyBatis快速入门(104)
4. JavaWeb学习总结(五十)——文件上传和下载(79)
5. 谈谈对Spring IOC的理解(73)
6. javaweb学习总结(二十二)——基于Servlet+JSP+JavaBean开发模式的用户登录注册(69)
7. Java基础学习总结——Java对象的序列化和反序列化(66)
8. javaweb学习总结(四)——Http协议(62)
9. MyBatis学习总结(八)——Mybatis3.x与Spring4.x整合(60)
10. Maven学习总结(一)——Maven入门(54)
Powered by: 
博客园 
Copyright © 孤傲苍狼
目录导航